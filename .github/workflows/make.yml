on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 0 * * 1"

name: make

jobs:
  build_containers:
    runs-on: 'ubuntu-latest'
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    name: build dynverse/dynwrap_${{ matrix.config.randpy }}

    env:
      REPO: dynverse/dynwrap_${{ matrix.config.randpy }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {randpy: 'r3.6_py3.6'}
          - {randpy: 'r3.6_py3.7'}
          - {randpy: 'r3.6_py3.8'}
          - {randpy: 'r4.0_py3.6'}
          - {randpy: 'r4.0_py3.7'}
          - {randpy: 'r4.0_py3.8'}
          - {randpy: 'latest'}

    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: |
          source version
          TAG="v$VERSION"
          echo "Randpy: ${{ matrix.config.randpy }}"
          echo "Branch: ${GITHUB_REF#refs/heads/}"
          echo "Version: $VERSION"
          echo "FROM dataintuitive/randpy:${{ matrix.config.randpy }}" > Dockerfile
          echo >> Dockerfile
          cat src/Dockerfile.template >> Dockerfile
          docker build --build-arg GITHUB_PAT=${{ secrets.PAT }} -t dynwrap_build -f Dockerfile .
          docker tag dynwrap_build "$REPO:$TAG"
          if [[ ${GITHUB_REF#refs/heads/} == "master" ]] ; then
            docker tag dynwrap_build "$REPO:latest"
          fi

      - name: Test
        run: |
          mkdir test_out
          docker run --entrypoint /tests/example.sh -v `pwd`/test_out:/mnt dynwrap_build /mnt/example.h5
          docker run --entrypoint /tests/r/run.R -v `pwd`/test_out:/mnt dynwrap_build --dataset /mnt/example.h5 --output /mnt/output_r.h5 --verbosity 3
          docker run --entrypoint Rscript -v `pwd`/test_out:/mnt dynwrap_build -e 'traj <- dynutils::read_h5("/mnt/output_r.h5"); if (!dynwrap::is_wrapper_with_trajectory(traj)) stop("No trajectory found!")'
          docker run --entrypoint /tests/python/run.py -v `pwd`/test_out:/mnt dynwrap_build --dataset /mnt/example.h5 --output /mnt/output_py.h5 --verbosity 3
          docker run --entrypoint Rscript -v `pwd`/test_out:/mnt dynwrap_build -e 'traj <- dynutils::read_h5("/mnt/output_r.h5"); if (!dynwrap::is_wrapper_with_trajectory(traj)) stop("No trajectory found!")'

      - name: Push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push $REPO
